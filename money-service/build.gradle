plugins {
    id 'com.palantir.docker' version "0.35.0"
}

group = 'com.htwo.money-service'
version = '1.0.0'

repositories {
    gradlePluginPortal() //docker plugin
    mavenCentral()
}

dependencies {
    implementation project(':common')
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    compileOnly 'org.projectlombok:lombok'
    // db
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:5.11.0'
    testImplementation 'org.mockito:mockito-inline:5.2.0'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    implementation group: 'org.axonframework', name: 'axon-configuration', version: "$axonVersion"
    implementation group: 'org.axonframework', name: 'axon-spring-boot-starter', version: "$axonVersion"
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(Test).configureEach {
    jvmArgs += "-XX:+EnableDynamicAgentLoading"
}

docker {
    println(tasks.bootJar.outputs.files)
    name rootProject.name+'-'+project.name + ":" + version
    dockerfile file('../Dockerfile')
    files tasks.bootJar.outputs.files
    buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name])
}